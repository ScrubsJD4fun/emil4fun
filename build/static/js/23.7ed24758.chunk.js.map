{"version":3,"sources":["views/app-views/home/clients/profile/index.js"],"names":["ClientProfile","_profile$address$city","_profile$address$zipc","_profile$website","id","useParams","history","useHistory","isEditing","setIsEditing","useState","isLoading","setIsLoading","profile","useSelector","state","form","Form","useForm","console","log","initialData","name","username","email","phone","address","street","suite","city","postCode","zipcode","website","dateOfBirth","_jsxs","Card","children","style","display","alignItems","gap","marginBottom","_jsx","position","Avatar","size","src","Button","type","onClick","outline","layout","initialValues","onFinish","disabled","Row","gutter","Col","span","Item","label","required","rules","message","Input","DatePicker","width","top","left","transform","textAlign","padding","Spin","setTimeout","push"],"mappings":"mGAAA,mIAkKeA,UA3JOA,KAAO,IAADC,EAAAC,EAAAC,EAC1B,MAAM,GAAEC,GAAOC,cACTC,EAAUC,eACTC,EAAWC,GAAgBC,oBAAS,IACpCC,EAAWC,GAAgBF,oBAAS,GACrCG,EAAUC,aAAaC,GAAUA,EAAMF,QAAQA,WAS9CG,GAAQC,IAAKC,UACpBC,QAAQC,IAAIP,GACZ,MAAMQ,EAAc,CAClBC,KAAMT,EAAQS,KACdC,SAAUV,EAAQU,SAClBC,MAAOX,EAAQW,MACfC,MAAOZ,EAAQY,MACfC,QAAS,GAAGb,EAAQa,QAAQC,WAAWd,EAAQa,QAAQE,QACvDC,KAA0B,QAAtB5B,EAAEY,EAAQa,QAAQG,YAAI,IAAA5B,IAAI,KAC9B6B,SAAiC,QAAzB5B,EAAEW,EAAQa,QAAQK,eAAO,IAAA7B,IAAI,KACrC8B,QAAwB,QAAjB7B,EAAEU,EAAQmB,eAAO,IAAA7B,IAAI,KAC5B8B,YAAapB,EAAQoB,aAAe,MAOtC,OACEC,eAACC,IAAI,CAAAC,SAAA,CACHF,eAAA,OAAKG,MAAO,CAAEC,QAAS,OAAQC,WAAY,WAAYC,IAAK,OAAQC,aAAc,QAASL,SAAA,CACzFM,cAAA,OAAKL,MAAO,CAAEM,SAAU,YAAaP,SACnCM,cAACE,IAAM,CAACC,KAAM,IAAKC,IAAI,gCAGzBJ,cAACK,IAAM,CAACC,KAAK,UAASZ,SAAC,kBAIvBM,cAACK,IAAM,CAACC,KAAK,OAAOC,QAASA,IAAMxC,GAAa,GAAO4B,MAAO,CAAEa,QAAS,wBAAyBd,SAAC,cAMrGF,eAACjB,IAAI,CACHD,KAAMA,EACNmC,OAAO,WACPC,cAAe/B,EACfgC,SAzBWA,KACf5C,GAAa,EAAM,EAyBf6C,UAAW9C,EAAU4B,SAAA,CAErBF,eAACqB,IAAG,CAACC,OAAQ,GAAGpB,SAAA,CACdM,cAACe,IAAG,CAACC,KAAM,GAAGtB,SACZM,cAACzB,IAAK0C,KAAI,CACRC,MAAM,OACNtC,KAAK,OACLuC,UAAQ,EACRC,MAAO,CAAC,CAAED,UAAU,EAAME,QAAS,uBAAwB3B,SAE3DM,cAACsB,IAAK,QAGVtB,cAACe,IAAG,CAACC,KAAM,GAAGtB,SACZM,cAACzB,IAAK0C,KAAI,CACRC,MAAM,WACNtC,KAAK,WACLuC,UAAQ,EACRC,MAAO,CAAC,CAAED,UAAU,EAAME,QAAS,2BAA4B3B,SAE/DM,cAACsB,IAAK,WAKZtB,cAACzB,IAAK0C,KAAI,CACRC,MAAM,QACNtC,KAAK,QACLuC,UAAQ,EACRC,MAAO,CACL,CAAED,UAAU,EAAME,QAAS,uBAC3B,CAAEf,KAAM,QAASe,QAAS,gCAC1B3B,SAEFM,cAACsB,IAAK,MAGR9B,eAACqB,IAAG,CAACC,OAAQ,GAAGpB,SAAA,CACdM,cAACe,IAAG,CAACC,KAAM,GAAGtB,SACZM,cAACzB,IAAK0C,KAAI,CACRC,MAAM,eACNtC,KAAK,QAAOc,SAEZM,cAACsB,IAAK,QAGVtB,cAACe,IAAG,CAACC,KAAM,GAAGtB,SACZM,cAACzB,IAAK0C,KAAI,CACRC,MAAM,UACNtC,KAAK,UAASc,SAEdM,cAACsB,IAAK,WAKZtB,cAACzB,IAAK0C,KAAI,CACRC,MAAM,UACNtC,KAAK,UAASc,SAEdM,cAACsB,IAAK,MAGR9B,eAACqB,IAAG,CAACC,OAAQ,GAAGpB,SAAA,CACdM,cAACe,IAAG,CAACC,KAAM,GAAGtB,SACZM,cAACzB,IAAK0C,KAAI,CACRC,MAAM,OACNtC,KAAK,OAAMc,SAEXM,cAACsB,IAAK,QAGVtB,cAACe,IAAG,CAACC,KAAM,GAAGtB,SACZM,cAACzB,IAAK0C,KAAI,CACRC,MAAM,YACNtC,KAAK,WAAUc,SAEfM,cAACsB,IAAK,WAKZtB,cAACzB,IAAK0C,KAAI,CACRC,MAAM,gBACNtC,KAAK,cAAac,SAElBM,cAACuB,IAAU,CAAC5B,MAAO,CAAE6B,MAAO,eAG/BvD,GACC+B,cAAA,OAAKL,MAAO,CAAEM,SAAU,WAAYwB,IAAK,MAAOC,KAAM,MAAOC,UAAW,wBAAyBC,UAAW,SAAUC,QAAS,QAASnC,SACtIM,cAAC8B,IAAI,CAAC3B,KAAK,YAGbH,cAACK,IAAM,CAACC,KAAK,UAAUC,QAASA,KA5IpCrC,GAAa,QACb6D,YAAW,KACTnE,EAAQoE,KAAK,oBAAoB,GAChC,MAyI2DtC,SAAC,kBAGxD,C","file":"static/js/23.7ed24758.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Avatar, Button, Form, Input, DatePicker, Row, Col, Spin } from 'antd';\r\nimport { useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ClientProfile = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [isEditing, setIsEditing] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const profile = useSelector((state) => state.profile.profile)\r\n\r\n  const handleViewProfile = () => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      history.push(`/app/home/clients`);\r\n    }, 2000);\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n  console.log(profile)\r\n  const initialData = {\r\n    name: profile.name,\r\n    username: profile.username,\r\n    email: profile.email,\r\n    phone: profile.phone,\r\n    address: `${profile.address.street}, ${profile.address.suite}`,\r\n    city: profile.address.city ?? null,\r\n    postCode: profile.address.zipcode ?? null,\r\n    website: profile.website ?? null,\r\n    dateOfBirth: profile.dateOfBirth && null,\r\n  };\r\n\r\n  const onFinish = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <div style={{ display: 'flex', alignItems: 'baseline', gap: '20px', marginBottom: '24px' }}>\r\n        <div style={{ position: 'relative' }}>\r\n          <Avatar size={100} src=\"https://i.pravatar.cc/150\" />\r\n        </div>\r\n        \r\n        <Button type=\"primary\">\r\n            Change Avatar\r\n        </Button>\r\n\r\n        <Button type=\"text\" onClick={() => setIsEditing(true)} style={{ outline: '1px solid !important' }}>\r\n            Remove\r\n        </Button>\r\n        \r\n      </div>\r\n\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        initialValues={initialData}\r\n        onFinish={onFinish}\r\n        disabled={!isEditing}\r\n      >\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              required\r\n              rules={[{ required: true, message: 'Please input name!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              required\r\n              rules={[{ required: true, message: 'Please input username!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          required\r\n          rules={[\r\n            { required: true, message: 'Please input email!' },\r\n            { type: 'email', message: 'Please enter a valid email!' }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"Phone Number\"\r\n              name=\"phone\"\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"Website\"\r\n              name=\"website\"\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name=\"address\"\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"City\"\r\n              name=\"city\"\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label=\"Post code\"\r\n              name=\"postCode\"\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Form.Item\r\n          label=\"Date of Birth\"\r\n          name=\"dateOfBirth\"\r\n        >\r\n          <DatePicker style={{ width: '100%' }} />\r\n        </Form.Item>\r\n      </Form>\r\n      {isLoading && (\r\n        <div style={{ position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', textAlign: 'center', padding: '50px' }}>\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      )}\r\n        <Button type=\"primary\" onClick={() => handleViewProfile()}>\r\n             Save Change\r\n        </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ClientProfile; "],"sourceRoot":""}