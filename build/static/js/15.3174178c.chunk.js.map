{"version":3,"sources":["components/planner/RoomPlanner.js","views/app-views/home/planner/index.js"],"names":["furnitureItems","id","name","type","image","RoomPlanner","placedItems","setPlacedItems","useState","selectedItem","setSelectedItem","boardRef","useRef","_jsxs","className","children","_jsx","map","item","onClick","newItem","uniqueId","Date","now","position","x","y","handleAddItem","src","alt","handleSave","saveData","items","_ref","blob","Blob","JSON","stringify","saveAs","accept","onChange","event","file","target","files","reader","FileReader","onload","e","importedItems","parse","result","find","f","error","console","readAsText","style","display","htmlFor","ref","Draggable","onDrag","data","handleDrag","bounds","PlannerPage","Card"],"mappings":"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","file":"static/js/15.3174178c.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Draggable from 'react-draggable';\r\nimport { saveAs } from 'file-saver';\r\nimport './RoomPlanner.css';\r\n\r\n// Объекты мебели\r\nconst furnitureItems = [\r\n  { id: 'table-4', name: 'Стол на 4 места', type: 'table', image: '/img/furniture/table-4.svg' },\r\n  { id: 'table-6', name: 'Стол на 6 мест', type: 'table', image: '/img/furniture/table-6.svg' },\r\n  { id: 'partition', name: 'Перегородка', type: 'partition', image: '/img/furniture/partition.svg' },\r\n  { id: 'partition-vertical', name: 'Перегородка вертикальная', type: 'partition', image: '/img/furniture/partition-vertical.svg' },\r\n];\r\n\r\nconst RoomPlanner = () => {\r\n  const [placedItems, setPlacedItems] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const boardRef = useRef(null);\r\n\r\n  // Добавление нового элемента на доску\r\n  const handleAddItem = (item) => {\r\n    const newItem = {\r\n      ...item,\r\n      uniqueId: `${item.id}-${Date.now()}`,\r\n      position: { x: 0, y: 0 }\r\n    };\r\n    setPlacedItems([...placedItems, newItem]);\r\n  };\r\n\r\n  // Обработка перемещения элемента\r\n  const handleDrag = (uniqueId, e, data) => {\r\n    setPlacedItems(placedItems.map(item => \r\n      item.uniqueId === uniqueId \r\n        ? { ...item, position: { x: data.x, y: data.y } }\r\n        : item\r\n    ));\r\n  };\r\n\r\n  // Сохранение расстановки в файл\r\n  const handleSave = () => {\r\n    const saveData = {\r\n      items: placedItems.map(({ uniqueId, id, position }) => ({\r\n        uniqueId,\r\n        id,\r\n        position\r\n      }))\r\n    };\r\n    const blob = new Blob([JSON.stringify(saveData)], { type: 'application/json' });\r\n    saveAs(blob, 'room-layout.json');\r\n  };\r\n\r\n  // Загрузка расстановки из файла\r\n  const handleImport = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        try {\r\n          const importedData = JSON.parse(e.target.result);\r\n          const importedItems = importedData.items.map(item => {\r\n            const originalItem = furnitureItems.find(f => f.id === item.id);\r\n            return {\r\n              ...originalItem,\r\n              uniqueId: item.uniqueId,\r\n              position: item.position\r\n            };\r\n          });\r\n          setPlacedItems(importedItems);\r\n        } catch (error) {\r\n          console.error('Ошибка при импорте файла:', error);\r\n        }\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"room-planner\">\r\n      <div className=\"furniture-list\">\r\n        <h3>Элементы мебели</h3>\r\n        <div className=\"furniture-items\">\r\n          {furnitureItems.map(item => (\r\n            <div\r\n              key={item.id}\r\n              className=\"furniture-item\"\r\n              onClick={() => handleAddItem(item)}\r\n            >\r\n              <img src={item.image} alt={item.name} />\r\n              <span>{item.name}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"planner-controls\">\r\n          <button onClick={handleSave}>Сохранить расстановку</button>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".json\"\r\n            onChange={handleImport}\r\n            style={{ display: 'none' }}\r\n            id=\"import-file\"\r\n          />\r\n          <label htmlFor=\"import-file\" className=\"import-button\">\r\n            Загрузить расстановку\r\n          </label>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"planning-board\" ref={boardRef}>\r\n        {placedItems.map(item => (\r\n          <Draggable\r\n            key={item.uniqueId}\r\n            position={item.position}\r\n            onDrag={(e, data) => handleDrag(item.uniqueId, e, data)}\r\n            bounds=\"parent\"\r\n          >\r\n            <div className=\"placed-item\">\r\n              <img src={item.image} alt={item.name} />\r\n            </div>\r\n          </Draggable>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomPlanner; ","import React from 'react';\r\nimport RoomPlanner from '../../../../components/planner/RoomPlanner';\r\nimport { Card } from 'antd';\r\n\r\nconst PlannerPage = () => {\r\n  return (\r\n    <div>\r\n      <h2>Планировщик помещения</h2>\r\n      <Card>\r\n        <RoomPlanner />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlannerPage; "],"sourceRoot":""}