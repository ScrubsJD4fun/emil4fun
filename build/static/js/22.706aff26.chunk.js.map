{"version":3,"sources":["views/app-views/home/clients/list/index.js","redux/actions/Profile.js"],"names":["ClientsList","history","useHistory","clients","setClients","useState","isLoading","setIsLoading","dispatch","useDispatch","handleViewProfile","userId","type","payload","find","client","id","push","useEffect","async","response","fetch","transformedData","json","map","user","role","Math","random","lastOnline","moment","subtract","floor","format","status","error","console","fetchClients","columns","title","dataIndex","key","render","text","record","_jsxs","style","display","alignItems","gap","cursor","onClick","children","_jsx","Avatar","src","name","color","fontSize","email","sorter","compare","a","b","toLowerCase","length","unix","filters","value","onFilter","Tag","_","className","Tooltip","Button","icon","EyeOutlined","size","danger","DeleteOutlined","Card","textAlign","padding","Spin","Table","dataSource","rowKey","pagination","pageSize"],"mappings":"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","file":"static/js/22.706aff26.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, Spin, Table, Tag, Avatar, Button, Tooltip } from 'antd';\r\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setProfileData } from 'redux/actions/Profile';\r\nconst ClientsList = () => {\r\n  const history = useHistory();\r\n  const [clients, setClients] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleViewProfile = (userId) => {\r\n    dispatch(setProfileData(clients.find(client => client.id === userId)));\r\n    history.push(`/app/home/clients/profile/${userId}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchClients = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n        const data = await response.json();\r\n        const transformedData = data.map(user => ({\r\n          ...user,\r\n          role: Math.random() > 0.7 ? 'Admin' : 'User',\r\n          lastOnline: moment().subtract(Math.floor(Math.random() * 30), 'days').format('MM/DD/YYYY'),\r\n          status: Math.random() > 0.7 ? 'Blocked' : 'Active'\r\n        }));\r\n        setClients(transformedData);\r\n      } catch (error) {\r\n        console.error('Error fetching clients:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n    fetchClients();\r\n    return () => {\r\n      setClients([]);\r\n    }\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'User',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text, record) => (\r\n        <div \r\n          style={{ display: 'flex', alignItems: 'center', gap: '10px', cursor: 'pointer' }}\r\n          onClick={() => handleViewProfile(record.id)}\r\n        >\r\n          <Avatar src={`https://i.pravatar.cc/150?u=${record.id}`} />\r\n          <div>\r\n            <div>{record.name}</div>\r\n            <div style={{ color: '#888', fontSize: '12px' }}>{record.email}</div>\r\n          </div>\r\n        </div>\r\n      ),\r\n      sorter: {\r\n        compare: (a, b) => {\r\n          a = a.name.toLowerCase();\r\n          b = b.name.toLowerCase();\r\n          return a > b ? -1 : b > a ? 1 : 0;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'Role',\r\n      dataIndex: 'role',\r\n      key: 'role',\r\n      sorter: {\r\n        compare: (a, b) => a.role.length - b.role.length,\r\n      },\r\n    },\r\n    {\r\n      title: 'Last online',\r\n      dataIndex: 'lastOnline',\r\n      key: 'lastOnline',\r\n      sorter: (a, b) => moment(a.lastOnline).unix() - moment(b.lastOnline).unix(),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      filters: [\r\n        { text: 'Active', value: 'Active' },\r\n        { text: 'Blocked', value: 'Blocked' },\r\n      ],\r\n      onFilter: (value, record) => record.status === value,\r\n      render: (status) => (\r\n        <Tag color={status === 'Active' ? '#87d068' : '#f50'}>\r\n          {status}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: 'actions',\r\n      render: (_, record) => (\r\n        <div className=\"text-right\">\r\n          <Tooltip title=\"View\">\r\n            <Button \r\n              type=\"primary\" \r\n              className=\"mr-2\" \r\n              icon={<EyeOutlined />}  \r\n              size=\"small\"\r\n              onClick={() => handleViewProfile(record.id)}\r\n            />\r\n          </Tooltip>\r\n          <Tooltip title=\"Delete\">\r\n            <Button danger icon={<DeleteOutlined />} size=\"small\"/>\r\n          </Tooltip>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card >\r\n      {isLoading ? (\r\n        <div style={{ textAlign: 'center', padding: '50px' }}>\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      ) : (\r\n        <Table \r\n          columns={columns} \r\n          dataSource={clients}\r\n          rowKey=\"id\"\r\n          pagination={{ pageSize: 10 }}\r\n        />\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ClientsList; ","export const setProfileData = (data) => ({\r\n    type: 'DATA_PROFILE',\r\n    payload: data,\r\n  });"],"sourceRoot":""}